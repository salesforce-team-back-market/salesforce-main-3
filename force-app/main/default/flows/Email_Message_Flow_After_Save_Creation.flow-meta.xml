<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>Assign_Current_Case_owner_BackWatch_EU</name>
        <label>Assign Current Case owner - BackWatch EU</label>
        <locationX>1544</locationX>
        <locationY>773</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_user_from_BackWatch_EU.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Case_owner_BackWatch_US</name>
        <label>Assign Current Case owner - BackWatch US</label>
        <locationX>1527</locationX>
        <locationY>198</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_user_from_BackWatch_US.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Case_owner_MAS_EU</name>
        <label>Assign Current Case owner - MAS EU</label>
        <locationX>1530</locationX>
        <locationY>563</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_user_from_Merchant_Activation_EU.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Case_owner_Merchant_Owner</name>
        <label>Assign Current Case owner - Merchant Owner</label>
        <locationX>1131</locationX>
        <locationY>1152</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetCase.Account.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Case_owner_Merchant_Owner_0</name>
        <label>Assign Current Case owner - Merchant Owner</label>
        <locationX>876</locationX>
        <locationY>788</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetCase.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Case_owner_Selfcare_EU</name>
        <label>Assign Current Case owner - Selfcare EU</label>
        <locationX>1520</locationX>
        <locationY>363</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_user_from_Selfcare_EU.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_CurrentCase_Id</name>
        <label>Assign CurrentCase Id</label>
        <locationX>442</locationX>
        <locationY>526</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Junk_Spam_Queue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_CurrentCase_Status_to_New</name>
        <label>Assign CurrentCase Status to New</label>
        <locationX>913</locationX>
        <locationY>409</locationY>
        <assignmentItems>
            <assignToReference>CurrentCase.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Decision_Case_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_number_of_open_cases_to_user</name>
        <label>Assign number of open cases to user</label>
        <locationX>2108</locationX>
        <locationY>512</locationY>
        <assignmentItems>
            <assignToReference>NumberofCasesOpen</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_open_cases_for_current_owner</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_current_owner</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Decision_Case_Owner</name>
        <label>Decision - Case Owner</label>
        <locationX>870</locationX>
        <locationY>580</locationY>
        <defaultConnector>
            <targetReference>Assign_Current_Case_owner_Merchant_Owner_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_owner_is_inactive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Decision_on_Case_Origin</targetReference>
            </connector>
            <label>Case owner is inactive</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_Case_status</name>
        <label>Decision - Case status</label>
        <locationX>714</locationX>
        <locationY>531</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Incoming_Email_To_change_the_case_status</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 9 OR 14 OR 15) AND 8 AND 10 AND 11 AND 12 AND 13</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.After_Sales_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Market_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Office_Integrators_Technic__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Buyback_only_available_for_EU_sellers__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Catalog__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Finance_and_Legal__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Quality_and_Sales_Performance__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordType.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Generic_Case__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Junk_Spam_Queue.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Seller_Support_Case__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Customer_Support_Case__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Status</targetReference>
            </connector>
            <label>Incoming Email - To change the case status</label>
        </rules>
        <rules>
            <name>Status_isn_t_new</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.After_Sales_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Market_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Office_Integrators_Technic__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Buyback_only_available_for_EU_sellers__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Catalog__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Finance_and_Legal__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Quality_and_Sales_Performance__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Generic_Case__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Junk_Spam_Queue.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Customer_Support_Case__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Seller_Support_Case__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_CurrentCase_Status_to_New</targetReference>
            </connector>
            <label>Status isn&apos;t new</label>
        </rules>
        <rules>
            <name>First_Answer_to_case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.Date_First_Response__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.CreatedDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <dateTimeValue>2022-03-28T07:00:00.000Z</dateTimeValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_First_Answer_date</targetReference>
            </connector>
            <label>First Answer to case (Date can be removed later - Prevent old cases from being updated)</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_on_Case_Origin</name>
        <label>Decision on Case Origin</label>
        <locationX>1077</locationX>
        <locationY>577</locationY>
        <defaultConnector>
            <targetReference>Assign_Current_Case_owner_Merchant_Owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_BackWatch_EU_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU email-to-case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_BackWatch_EU</targetReference>
            </connector>
            <label>Is BackWatch EU contact</label>
        </rules>
        <rules>
            <name>Is_BackWatch_US_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>US email-to-case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_BackWatch_US</targetReference>
            </connector>
            <label>Is BackWatch US contact</label>
        </rules>
        <rules>
            <name>Is_Merchant_Activation_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU - Merchant Activation</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_Merchant_Activation_EU</targetReference>
            </connector>
            <label>Is Merchant Activation contact</label>
        </rules>
        <rules>
            <name>Is_Selfcare_EU_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Selfcare EU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_Selfcare_EU</targetReference>
            </connector>
            <label>Is Selfcare EU contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_on_user_bypass_flow</name>
        <label>Decision on user bypass flow</label>
        <locationX>132</locationX>
        <locationY>813</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>user_don_t_bypass_flow</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$User.ByPassFlow__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>What_is_email_related_to</targetReference>
            </connector>
            <label>user don&apos;t bypass flow</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_is_email_related_to</name>
        <label>What is email related to?</label>
        <locationX>374</locationX>
        <locationY>894</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCase</targetReference>
            </connector>
            <label>Case</label>
        </rules>
        <rules>
            <name>Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>0033</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contact_and_Account</targetReference>
            </connector>
            <label>Contact</label>
        </rules>
        <rules>
            <name>Merchant</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>0013</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Merchant</targetReference>
            </connector>
            <label>Merchant</label>
        </rules>
    </decisions>
    <description>Fix on Team Change Bug</description>
    <environments>Default</environments>
    <formulas>
        <name>BodyLenght</name>
        <dataType>Number</dataType>
        <expression>LEN({!$Record.TextBody})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>Email_Message</name>
        <dataType>String</dataType>
        <expression>If(Contains({!$Record.TextBody}, &quot;--------------- Original Message ---------------&quot;), LEFT({!$Record.TextBody},Find(&quot;--------------- Original Message ---------------&quot;,{!$Record.TextBody})-1), {!$Record.TextBody}
)</expression>
    </formulas>
    <formulas>
        <name>Today</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Email Message Flow - After Save (Creation) {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Email Message Flow - After Save (Creation)</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contact_and_Account</name>
        <label>Get Contact and Account</label>
        <locationX>224</locationX>
        <locationY>1042</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Merchant_0</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Junk_Spam_Queue</name>
        <label>Get Junk/Spam Queue</label>
        <locationX>574</locationX>
        <locationY>526</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Case_status</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Junk_Spam_queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_open_cases_for_current_owner</name>
        <label>Get open cases for current owner</label>
        <locationX>1972</locationX>
        <locationY>511</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_number_of_open_cases_to_user</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 4) AND 3</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CurrentCase.OwnerId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_BackWatch_EU</name>
        <label>Get user from BackWatch EU</label>
        <locationX>1356</locationX>
        <locationY>752</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Current_Case_owner_BackWatch_EU</targetReference>
        </connector>
        <filterLogic>((1 AND 3) OR 4) AND 2 AND 5</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSM Back Watch E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.PA__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.Antoine_T__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_BackWatch_US</name>
        <label>Get user from BackWatch US</label>
        <locationX>1344</locationX>
        <locationY>197</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Current_Case_owner_BackWatch_US</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSM Back Watch U.S.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_Merchant_Activation_EU</name>
        <label>Get user from Merchant Activation EU</label>
        <locationX>1352</locationX>
        <locationY>564</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Current_Case_owner_MAS_EU</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Activation E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.Felix__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_Selfcare_EU</name>
        <label>Get user from Selfcare EU</label>
        <locationX>1344</locationX>
        <locationY>363</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Current_Case_owner_Selfcare_EU</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSM Selfcare E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCase</name>
        <label>GetCase</label>
        <locationX>381</locationX>
        <locationY>713</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_CurrentCase_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_First_Answer_date</name>
        <label>Update Case First Answer date</label>
        <locationX>653</locationX>
        <locationY>333</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Date_First_Response__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Status</name>
        <label>Update Case Status</label>
        <locationX>649</locationX>
        <locationY>756</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_current_owner</name>
        <label>Update current owner</label>
        <locationX>2242</locationX>
        <locationY>513</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CurrentCase.OwnerId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Current_Number_of_Open_Cases__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>NumberofCasesOpen</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Current_Number_of_Open_Cases__c</field>
            <value>
                <elementReference>NumberofCasesOpen</elementReference>
            </value>
        </inputAssignments>
        <object>User</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_CurrentCase</name>
        <label>Update CurrentCase</label>
        <locationX>1818</locationX>
        <locationY>512</locationY>
        <connector>
            <targetReference>Get_open_cases_for_current_owner</targetReference>
        </connector>
        <inputReference>CurrentCase</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_CurrentCase_0</name>
        <label>Update CurrentCase</label>
        <locationX>1289</locationX>
        <locationY>894</locationY>
        <inputReference>CurrentCase</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Merchant</name>
        <label>Update Merchant</label>
        <locationX>730</locationX>
        <locationY>978</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Last_Breath_Date__c</field>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_Breath_Type__c</field>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Merchant_0</name>
        <label>Update Merchant</label>
        <locationX>82</locationX>
        <locationY>1033</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Contact_and_Account.Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Last_Breath_Date__c</field>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_Breath_Type__c</field>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>482</locationY>
        <connector>
            <targetReference>Decision_on_user_bypass_flow</targetReference>
        </connector>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CaseOwner</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Comment_Check</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>CurrentCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>NumberofCasesOpen</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
