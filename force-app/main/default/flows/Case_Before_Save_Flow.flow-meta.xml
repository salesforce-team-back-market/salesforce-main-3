<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>Assign_Case_to_BizDev_BuyBack</name>
        <label>Assign Case to BizDev BuyBack</label>
        <locationX>1898</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Account.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>BuyBackBillProcessSubject</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Team_Members</name>
        <label>Assign Team Members</label>
        <locationX>1370</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Merchant_BizDev__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetMerchant.Owner.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Recipient_email_sales__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetMerchant.Recipient_email_sales__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Recipient_email_buyback__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetMerchant.Recipient_email_buyback__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Start_Round_Robin__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_is_the_Case_record_type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Change_Case_Status_to_Chargeback_in_Progress</name>
        <label>Change Case Status to Chargeback in Progress</label>
        <locationX>2162</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Chargeback in Progress</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Bill_Uploaded_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_BuyBack_Bill_Process</name>
        <label>Update BuyBack Bill Process</label>
        <locationX>1634</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>BuyBackBillProcessSubject</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Case_Accepted</name>
        <label>Update Case: Accepted</label>
        <locationX>314</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>$Record.Stage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Accepted</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Case_BuyBack_Refused</name>
        <label>Update Case: BuyBack Refused</label>
        <locationX>1106</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>$Record.Stage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Refused</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Case_BuyBack_Validated</name>
        <label>Update Case: BuyBack Validated</label>
        <locationX>842</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>$Record.Stage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Accepted</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Case_Refused</name>
        <label>Update Case: Refused</label>
        <locationX>50</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>$Record.Stage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Refused</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>BuyBack_Test_Results</name>
        <label>BuyBack Test Results</label>
        <locationX>1106</locationX>
        <locationY>791</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Accepted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Stage__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Draft</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Total_points__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_BuyBack_Validated</targetReference>
            </connector>
            <label>Accepted</label>
        </rules>
        <rules>
            <name>Refused</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Stage__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Draft</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Total_points__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_BuyBack_Refused</targetReference>
            </connector>
            <label>Refused</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_email_Junk</name>
        <label>Is email Junk</label>
        <locationX>2778</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Email_is_Junk_Spam</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>test_hi@backmarket.fr</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>hi@backmarket.fr</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>catalog-mgmt@backmarkethelp.zendesk.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>support@backmarket-support.zendesk.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>business@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>mailer-daemon</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>no-reply@backmarket.fr</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>noreply@aircall.io</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>no-reply@yet-another-mail-merge.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>business@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>noreply@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>notifications@calendly.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>help@cubyn.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>diana@textexpander.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>performance@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>quality@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>noreply@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>support@backmarkethelp.zendesk.com</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Junk_Spam_queue</targetReference>
            </connector>
            <label>Email is Junk/Spam</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_email_Junk_0</name>
        <label>Is email Junk</label>
        <locationX>3218</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Email_is_Junk_Spam_0</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Out Of Office</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Junk_Spam_queue</targetReference>
            </connector>
            <label>Email is Junk/Spam</label>
        </rules>
    </decisions>
    <decisions>
        <name>Merchant_is_on_case</name>
        <label>Merchant is on case</label>
        <locationX>2470</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Business_Name_is_not_blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetMerchant</targetReference>
            </connector>
            <label>Business Name is not blank</label>
        </rules>
        <rules>
            <name>BackWatch_Junk</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_email_Junk</targetReference>
            </connector>
            <label>BackWatch Junk</label>
        </rules>
        <rules>
            <name>SSC_Junk_Case_Origin</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR 5 OR 6 OR 7 OR 8 OR 9)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Generic_Case__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.After_Sales_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Quality_and_Sales_Performance__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Finance_and_Legal__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Catalog__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Market_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Office_Integrators_Technic__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Buyback_only_available_for_EU_sellers__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_email_Junk_0</targetReference>
            </connector>
            <label>SSC Junk - Case Origin</label>
        </rules>
    </decisions>
    <decisions>
        <name>Quality_Test_Result</name>
        <label>Quality Test Result</label>
        <locationX>314</locationX>
        <locationY>791</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Test_Refused</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Stage__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Draft</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Total_points__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Refused</targetReference>
            </connector>
            <label>Test Refused</label>
        </rules>
        <rules>
            <name>Test_Accepted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Stage__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Draft</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Total_points__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Accepted</targetReference>
            </connector>
            <label>Test Accepted</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_is_the_Case_record_type</name>
        <label>What is the Case record type</label>
        <locationX>1370</locationX>
        <locationY>671</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Quality_Test_Sales</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>QualityTest</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>QualityTestUS</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Quality_Test_Result</targetReference>
            </connector>
            <label>Quality Test Sales</label>
        </rules>
        <rules>
            <name>Quality_Test_BuyBack</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>BuyBackTest</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>BuyBack_Test_Results</targetReference>
            </connector>
            <label>Quality Test BuyBack</label>
        </rules>
        <rules>
            <name>BuyBack_Bill_Process</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>BuyBackBillProcessRecordType</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_BuyBack_Bill_Process</targetReference>
            </connector>
            <label>BuyBack Bill Process</label>
        </rules>
        <rules>
            <name>BuyBack_Bill_Process_V2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BuyBack_Bill_Process_V2__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_to_BizDev_BuyBack</targetReference>
            </connector>
            <label>BuyBack Bill Process V2</label>
        </rules>
        <rules>
            <name>BuyBack_Bill_Process_V2_Chargeback_Added</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Bill_Amount__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Bill_Amount__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Change_Case_Status_to_Chargeback_in_Progress</targetReference>
            </connector>
            <label>BuyBack Bill Process V2 - Chargeback Added</label>
        </rules>
    </decisions>
    <description>Decision element - Supplied email</description>
    <environments>Default</environments>
    <formulas>
        <name>BuyBackBillProcessRecordType</name>
        <dataType>String</dataType>
        <expression>{!$Setup.CaseRecordType__c.Merchant_Refund__c}</expression>
    </formulas>
    <formulas>
        <name>BuyBackBillProcessSubject</name>
        <dataType>String</dataType>
        <expression>TEXT({!GetMerchant.Back_Office_PK__c})&amp;&quot; &quot;&amp;{!GetMerchant.Name}&amp;&quot; &quot;&amp; TEXT({!$Record.Reason}) &amp;&quot; &quot;&amp;  TEXT(TODAY())</expression>
    </formulas>
    <formulas>
        <name>BuyBackTest</name>
        <dataType>String</dataType>
        <expression>{!$Setup.CaseRecordType__c.BuyBack_Test__c}</expression>
    </formulas>
    <formulas>
        <name>QualityTest</name>
        <dataType>String</dataType>
        <expression>{!$Setup.CaseRecordType__c.Quality_Test__c}</expression>
    </formulas>
    <formulas>
        <name>QualityTestUS</name>
        <dataType>String</dataType>
        <expression>{!$Setup.CaseRecordType__c.Quality_Test_US__c}</expression>
    </formulas>
    <formulas>
        <name>TestCategory</name>
        <dataType>Number</dataType>
        <expression>IF({!$Record.Smartphones__c} =&quot;Go!&quot;, 1, 0) + IF( {!$Record.Tablets__c} =&quot;Go!&quot;, 1, 0) + IF({!$Record.Laptop_Macbook__c} =&quot;Go!&quot;, 1, 0)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>Today</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Case - Before Save Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Before Save Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Junk_Spam_queue</name>
        <label>Get Junk/Spam queue</label>
        <locationX>2470</locationX>
        <locationY>1439</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Owner_and_Status</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Junk_Spam_queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetMerchant</name>
        <label>GetMerchant</label>
        <locationX>1370</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Team_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Owner_and_Status</name>
        <label>Update Case Owner and Status</label>
        <locationX>2470</locationX>
        <locationY>1559</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Junk_Spam_queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>2344</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Merchant_is_on_case</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CaseID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
