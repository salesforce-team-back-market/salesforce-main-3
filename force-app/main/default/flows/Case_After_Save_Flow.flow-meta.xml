<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Action_Send_Email_for_ChargeBack_Paid</name>
        <label>Action - Send Email for ChargeBack Paid</label>
        <locationX>2012</locationX>
        <locationY>862</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>BuybackCasePaid_EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>Var_ListEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>legal-sellers@backmarket.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>BuybackCasePais_EmailSubject</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Action_Send_Email_for_new_ChargeBack</name>
        <label>Action - Send Email for new ChargeBack</label>
        <locationX>1477</locationX>
        <locationY>1040</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Criteria_V2</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>NewCase_Buyback_EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>Var_ListEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>legal-sellers@backmarket.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>NewCase_Buyback_EmailSubject</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Notify_The_Team</name>
        <label>Notify The Team</label>
        <locationX>2032</locationX>
        <locationY>212</locationY>
        <actionName>Case.New_Quality_test_corrected</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_about_the_status_change</name>
        <label>Send Email about the status change</label>
        <locationX>2034</locationX>
        <locationY>522</locationY>
        <actionName>Case.Case_Alert_Status_of_the_case_is_changed</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_to_Mathilde</name>
        <label>Send Email to Mathilde</label>
        <locationX>2277</locationX>
        <locationY>624</locationY>
        <actionName>Case.Case_Alert_Proof_of_Payment_Received</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_to_the_merchant</name>
        <label>Send Email to the merchant</label>
        <locationX>1618</locationX>
        <locationY>585</locationY>
        <actionName>Case.BuyBack_Bill_Process_New_Case_is_created</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Criteria</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>Add_BizDev_and_contact_Email</name>
        <label>Add BizDev and contact Email</label>
        <locationX>1337</locationX>
        <locationY>862</locationY>
        <assignmentItems>
            <assignToReference>Var_ListEmail</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>BizDev_Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Var_ListEmail</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Contact.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Case_is_New</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Case_Owner_BackWatch_EU</name>
        <label>Assign Case Owner - BackWatch EU</label>
        <locationX>1782</locationX>
        <locationY>1173</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_BackWatch_EU.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Case_Owner_BackWatch_US</name>
        <label>Assign Case Owner - BackWatch US</label>
        <locationX>1783</locationX>
        <locationY>1340</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_BackWatch_US.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Case_Owner_MAS_EU</name>
        <label>Assign Case Owner - MAS EU</label>
        <locationX>1774</locationX>
        <locationY>1631</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_MAS_EU.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Case_Owner_Merchant_Owner</name>
        <label>Assign Case Owner - Merchant Owner</label>
        <locationX>1506</locationX>
        <locationY>1775</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Account.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Case_Owner_Selfcare_EU</name>
        <label>Assign Case Owner - Selfcare EU</label>
        <locationX>1781</locationX>
        <locationY>1486</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Selfcare_EU.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_current_case_Contact_and_Business_Name</name>
        <label>Assign current case Contact and Business Name</label>
        <locationX>1198</locationX>
        <locationY>1521</locationY>
        <assignmentItems>
            <assignToReference>$Record.ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_contact.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_contact.Account.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Start_Round_Robin__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Merchant_BizDev__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_contact.Account.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Number_of_Open_Cases_to_Previous_User</name>
        <label>Assign Number of Open Cases to Previous User</label>
        <locationX>2978</locationX>
        <locationY>1404</locationY>
        <assignmentItems>
            <assignToReference>NuberOfOpenCasesCurrentOwner</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Open_Cases_for_Previous_Owner</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Previous_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Number_of_Open_Cases_to_User</name>
        <label>Assign Number of Open Cases to User</label>
        <locationX>2392</locationX>
        <locationY>1401</locationY>
        <assignmentItems>
            <assignToReference>NuberOfOpenCasesCurrentOwner</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Open_Cases_for_Current_Owner</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Current_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Start_Round_Robin_True</name>
        <label>Assign Start Round Robin True</label>
        <locationX>1195</locationX>
        <locationY>1286</locationY>
        <assignmentItems>
            <assignToReference>$Record.Start_Round_Robin__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_CurrentCase_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Test_status_to_Onboarding_0</name>
        <label>Assign - Test status to Onboarding</label>
        <locationX>1557</locationX>
        <locationY>358</locationY>
        <assignmentItems>
            <assignToReference>Onboarding_Process.Status_Quality_Test__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusQualityTest</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Onboarding_Process.Date_Quality_Test__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Onboarding_Process.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Buyback_Onboarding_Process.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Onboarding_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Test_status_to_SalesOnboarding</name>
        <label>Assign - Test status to SalesOnboarding</label>
        <locationX>1553</locationX>
        <locationY>50</locationY>
        <assignmentItems>
            <assignToReference>Onboarding_Process.Status_Quality_Test__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusQualityTest</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Onboarding_Process.Date_Quality_Test__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Onboarding_Process.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Onboarding_Process.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Onboarding_0</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Case_is_New</name>
        <label>Case is New</label>
        <locationX>1469</locationX>
        <locationY>864</locationY>
        <defaultConnector>
            <targetReference>Criteria_V2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_is_new_Bill_Process_V2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Action_Send_Email_for_new_ChargeBack</targetReference>
            </connector>
            <label>Case is new - Bill Process V2</label>
        </rules>
    </decisions>
    <decisions>
        <name>Case_is_New_0</name>
        <label>Case is New</label>
        <locationX>1311</locationX>
        <locationY>591</locationY>
        <defaultConnector>
            <targetReference>Criteria</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_is_new_Bill_Process</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_BB_Case</targetReference>
            </connector>
            <label>Case is new - Bill Process</label>
        </rules>
    </decisions>
    <decisions>
        <name>Criteria</name>
        <label>Criteria</label>
        <locationX>1718</locationX>
        <locationY>575</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Bill_Uploaded</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Bill_Uploaded__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Bill_Uploaded_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Bill_Uploaded_Info</targetReference>
            </connector>
            <label>Bill Uploaded</label>
        </rules>
        <rules>
            <name>Bill_Sent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Bill_Sent__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Bill_Sent_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_BuyBack_Bill_Process</targetReference>
            </connector>
            <label>Bill Sent</label>
        </rules>
        <rules>
            <name>Proof_of_Payment_Received</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Proof_of_Payment_Received__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Proof_of_Payment_Received_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Proof_Of_Payment_Received</targetReference>
            </connector>
            <label>Proof of Payment Received</label>
        </rules>
    </decisions>
    <decisions>
        <name>Criteria_V2</name>
        <label>Criteria V2</label>
        <locationX>1796</locationX>
        <locationY>862</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Chargeback_is_Paid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bill Paid</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Bill Paid</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Action_Send_Email_for_ChargeBack_Paid</targetReference>
            </connector>
            <label>Chargeback is Paid</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_Case_merchant</name>
        <label>Decision - Case merchant</label>
        <locationX>1170</locationX>
        <locationY>873</locationY>
        <defaultConnector>
            <targetReference>Assign_Start_Round_Robin_True</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Contact_is_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_contact</targetReference>
            </connector>
            <label>Contact is null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_Changed_owner</name>
        <label>Decision - Changed owner</label>
        <locationX>2676</locationX>
        <locationY>1402</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owner_is_changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Open_Cases_for_Previous_Owner</targetReference>
            </connector>
            <label>Owner is changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_in_Case_Owner</name>
        <label>Decision in Case Owner</label>
        <locationX>1497</locationX>
        <locationY>1407</locationY>
        <defaultConnector>
            <targetReference>Assign_Case_Owner_Merchant_Owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Email_to_case_For_BackWatch_EU</name>
            <conditionLogic>1 AND (2 OR ((3 OR 4) AND 5))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.UserID__c.PA__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU email-to-case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_BackWatch_EU</targetReference>
            </connector>
            <label>Email-to-case - For BackWatch EU</label>
        </rules>
        <rules>
            <name>Email_to_case_For_BackWatch_US</name>
            <conditionLogic>1 AND (2 OR ((3 OR 4) AND 5))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.UserID__c.Sam__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>US email-to-case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_BackWatch_US</targetReference>
            </connector>
            <label>Email-to-case - For BackWatch US</label>
        </rules>
        <rules>
            <name>Email_to_case_For_Selfcare_EU</name>
            <conditionLogic>1 AND (2 OR ((3 OR 4) AND 5))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.UserID__c.Antoine_T__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Selfcare EU</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Selfcare_EU</targetReference>
            </connector>
            <label>Email-to-case - For Selfcare EU</label>
        </rules>
        <rules>
            <name>Email_to_case_For_MAS_EU</name>
            <conditionLogic>1 AND 4 AND (3 OR 2)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU - Merchant Activation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_MAS_EU</targetReference>
            </connector>
            <label>Email-to-case - For MAS EU</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_Is_get_empty</name>
        <label>Decision - Is get empty</label>
        <locationX>1377</locationX>
        <locationY>55</locationY>
        <defaultConnector>
            <targetReference>Assign_Test_status_to_SalesOnboarding</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_No_Onboarding</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Onboarding_Process</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_case</targetReference>
            </connector>
            <label>Yes - No Onboarding</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_Is_get_empty_0</name>
        <label>Decision - Is get empty</label>
        <locationX>1372</locationX>
        <locationY>352</locationY>
        <defaultConnector>
            <targetReference>Assign_Test_status_to_Onboarding_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_No_Buyback_Onboarding</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Buyback_Onboarding_Process</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_case</targetReference>
            </connector>
            <label>Yes - No Buyback Onboarding</label>
        </rules>
    </decisions>
    <decisions>
        <name>decision_on_user_bypass_flow</name>
        <label>decision on user bypass flow</label>
        <locationX>918</locationX>
        <locationY>422</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>user_dont_bypass_flow</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$User.ByPassFlow__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Test_Details</targetReference>
            </connector>
            <label>user dont bypass flow</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_contact_found</name>
        <label>Is contact found</label>
        <locationX>1013</locationX>
        <locationY>1429</locationY>
        <defaultConnector>
            <targetReference>Assign_Start_Round_Robin_True</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_contact_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_contact</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_current_case_Contact_and_Business_Name</targetReference>
            </connector>
            <label>Case contact found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Team_Populated</name>
        <label>Is Team Populated?</label>
        <locationX>1822</locationX>
        <locationY>213</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Team_is_populated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Recipient_email_sales__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Notify_The_Team</targetReference>
            </connector>
            <label>Team is populated</label>
        </rules>
    </decisions>
    <decisions>
        <name>Test_Details</name>
        <label>Test Details</label>
        <locationX>1167</locationX>
        <locationY>683</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Sales_Quality_Test</name>
            <conditionLogic>( 1 OR 3) AND 2</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Record_type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quality_Test</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Record_type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quality_Test_US_Sales</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Onboarding_Process</targetReference>
            </connector>
            <label>Sales Quality Test</label>
        </rules>
        <rules>
            <name>BuyBack_Test</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Record_type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quality_Test_Buyback</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Buyback_Onboarding_Process</targetReference>
            </connector>
            <label>BuyBack Test</label>
        </rules>
        <rules>
            <name>BuyBack_Bill_Process</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>BuyBackBillProcess</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_is_New_0</targetReference>
            </connector>
            <label>BuyBack Bill Process</label>
        </rules>
        <rules>
            <name>BuyBack_Bill_Process_V2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BuyBack_Bill_Process_V2__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_BizDev_and_contact_Email</targetReference>
            </connector>
            <label>BuyBack Bill Process V2</label>
        </rules>
        <rules>
            <name>Case_is_Email_to_case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Decision_Case_merchant</targetReference>
            </connector>
            <label>Case is Email-to-case</label>
        </rules>
        <rules>
            <name>SSC</name>
            <conditionLogic>(1 OR 3 OR 4 OR 5 OR 6 OR 7) AND 2</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.After_Sales_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Quality_and_Sales_Performance__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Billing_Invoicing_and_Fees__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Catalog__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Market_Services__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.Back_Office_Integrators_Technic__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_BackShip_Support_Queue</targetReference>
            </connector>
            <label>SSC</label>
        </rules>
    </decisions>
    <description>Buyback in US
SSC - All cases</description>
    <formulas>
        <name>After3BusinessDays</name>
        <dataType>DateTime</dataType>
        <expression>DATETIMEVALUE(TEXT(CASE(
  MOD( ({!$Record.Has_been_created_on__c} +3) - DATE( 1900, 1, 8 ), 7 ),
  0, {!$Record.Has_been_created_on__c} +3,
  1, {!$Record.Has_been_created_on__c} +3,
  2, {!$Record.Has_been_created_on__c} +3,
  3, {!$Record.Has_been_created_on__c} +3,
  4, {!$Record.Has_been_created_on__c} +3,
  5, {!$Record.Has_been_created_on__c}+5, 
{!$Record.Has_been_created_on__c} +4
))+&quot; &quot;+&apos;10:00:00&apos;)</expression>
    </formulas>
    <formulas>
        <name>After3BusinessDaysDAY</name>
        <dataType>Date</dataType>
        <expression>CASE(
  MOD( ({!$Record.Has_been_created_on__c}+3) - DATE( 1900, 1, 8 ), 7 ),
  0, {!$Record.Has_been_created_on__c}+3,
  1, {!$Record.Has_been_created_on__c}+3,
  2, {!$Record.Has_been_created_on__c}+3,
  3, {!$Record.Has_been_created_on__c}+3,
  4, {!$Record.Has_been_created_on__c}+3,
  5, {!$Record.Has_been_created_on__c}+5, 
{!$Record.Has_been_created_on__c}+4
)</expression>
    </formulas>
    <formulas>
        <name>After_3_days</name>
        <dataType>Date</dataType>
        <expression>NOW()+3</expression>
    </formulas>
    <formulas>
        <name>BizDev_Email</name>
        <dataType>String</dataType>
        <expression>if( {!$Record.Account.BizDev_Team__c}= &apos;Back Watch E.U.&apos;, &apos;backwatch@backmarket.com&apos;, 
if( {!$Record.Account.BizDev_Team__c}= &apos;Onboarding E.U.&apos;, &apos;backwatch@backmarket.com&apos;, 
if( {!$Record.Account.BizDev_Team__c}= &apos;Back Watch U.S.&apos;, &apos;sam@backmarket.com&apos;,
if( {!$Record.Account.BizDev_Team__c}= &apos;Selfcare E.U.&apos;, &apos;selfcare@backmarket.com&apos;,
{!$Record.Merchant_BizDev__r.Email}
))))</expression>
    </formulas>
    <formulas>
        <name>BuyBackBillProcess</name>
        <dataType>String</dataType>
        <expression>{!$Setup.CaseRecordType__c.Merchant_Refund__c}</expression>
    </formulas>
    <formulas>
        <name>CaseOwner</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.Case_Reason_Details__c},&quot;My request is related to Back Ship&quot;), {!Get_BackShip_Support_Queue.Id},{!Get_Support_Advisors_Queue.Id})</expression>
    </formulas>
    <formulas>
        <name>Numberofopencases</name>
        <dataType>Number</dataType>
        <expression>{!NuberOfOpenCasesCurrentOwner}+1</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>StatusQualityTest</name>
        <dataType>String</dataType>
        <expression>if(ISPICKVAL({!$Record.Stage__c},&quot;Accepted&quot;),&quot;All good&quot;, &quot;Intervention needed&quot;)</expression>
    </formulas>
    <formulas>
        <name>Today</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Case - After Save Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - After Save Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_BackShip_Support_Queue</name>
        <label>Get BackShip Support Queue</label>
        <locationX>910</locationX>
        <locationY>734</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Support_Advisors_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Back_Ship_Support</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_BackWatch_EU</name>
        <label>Get BackWatch EU</label>
        <locationX>1620</locationX>
        <locationY>1173</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Case_Owner_BackWatch_EU</targetReference>
        </connector>
        <filterLogic>((1 AND 3) OR 4) AND 2 AND 5</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Back Watch E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.PA__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.Antoine_T__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_BackWatch_US</name>
        <label>Get BackWatch US</label>
        <locationX>1631</locationX>
        <locationY>1340</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Case_Owner_BackWatch_US</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Back Watch U.S.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Buyback_Onboarding_Process</name>
        <label>Get Buyback Onboarding Process</label>
        <locationX>1260</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Is_get_empty_0</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND (4 OR 5)</filterLogic>
        <filters>
            <field>Merchant__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.Special_Process_Record_Types_Ids__c.Onboarding_buyback__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.Special_Process_Record_Types_Ids__c.Onboarding_Buyback_US__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Stage__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Business &amp; Quality Prerequisites</stringValue>
            </value>
        </filters>
        <filters>
            <field>Stage__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Go-Live Prerequisites</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Onboarding_Process__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_contact</name>
        <label>Get contact</label>
        <locationX>1022</locationX>
        <locationY>1253</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_contact_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SuppliedEmail</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_MAS_EU</name>
        <label>Get MAS EU</label>
        <locationX>1638</locationX>
        <locationY>1631</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Case_Owner_MAS_EU</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Activation E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.Felix__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Onboarding_Process</name>
        <label>Get Onboarding Process</label>
        <locationX>1165</locationX>
        <locationY>53</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Is_get_empty</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>Merchant__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.Special_Process_Record_Types_Ids__c.Onboarding__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.Special_Process_Record_Types_Ids__c.Onboarding_US__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Stage__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Ongoing</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Onboarding_Process__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Open_Cases_for_Current_Owner</name>
        <label>Get Open Cases for Current Owner</label>
        <locationX>2241</locationX>
        <locationY>1400</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Number_of_Open_Cases_to_User</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 4) AND 3</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Open_Cases_for_Previous_Owner</name>
        <label>Get Open Cases for Previous Owner</label>
        <locationX>2851</locationX>
        <locationY>1404</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Number_of_Open_Cases_to_Previous_User</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 4) AND 3</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.OwnerId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Selfcare_EU</name>
        <label>Get Selfcare EU</label>
        <locationX>1634</locationX>
        <locationY>1486</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Case_Owner_Selfcare_EU</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Selfcare E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Support_Advisors_Queue</name>
        <label>Get Support Advisors Queue</label>
        <locationX>732</locationX>
        <locationY>775</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UpdateCustomerPortalCaseOwner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Seller_Support_Advisors</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_BB_Case</name>
        <label>Update Case</label>
        <locationX>1494</locationX>
        <locationY>585</locationY>
        <connector>
            <targetReference>Send_Email_to_the_merchant</targetReference>
        </connector>
        <inputAssignments>
            <field>Merchant_Notified_by_Email__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Account.BizDev_Buyback__r.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Bill_Uploaded_Info</name>
        <label>Update Bill Uploaded Info</label>
        <locationX>1885</locationX>
        <locationY>522</locationY>
        <connector>
            <targetReference>Send_Email_about_the_status_change</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Bill_Uploaded_Date__c</field>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_BuyBack_Bill_Process</name>
        <label>Update BuyBack Bill Process</label>
        <locationX>1880</locationX>
        <locationY>663</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Bill_Sent_Date__c</field>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Pending Merchant Reply</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_case</name>
        <label>Update case</label>
        <locationX>1387</locationX>
        <locationY>212</locationY>
        <connector>
            <targetReference>Is_Team_Populated</targetReference>
        </connector>
        <inputAssignments>
            <field>Tech_Test_not_used__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Current_Owner</name>
        <label>Update Current Owner</label>
        <locationX>2530</locationX>
        <locationY>1401</locationY>
        <connector>
            <targetReference>Decision_Changed_owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Current_Number_of_Open_Cases__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>NuberOfOpenCasesCurrentOwner</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Current_Number_of_Open_Cases__c</field>
            <value>
                <elementReference>NuberOfOpenCasesCurrentOwner</elementReference>
            </value>
        </inputAssignments>
        <object>User</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_CurrentCase</name>
        <label>Update CurrentCase</label>
        <locationX>1995</locationX>
        <locationY>1408</locationY>
        <connector>
            <targetReference>Get_Open_Cases_for_Current_Owner</targetReference>
        </connector>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_CurrentCase_0</name>
        <label>Update CurrentCase</label>
        <locationX>1361</locationX>
        <locationY>1406</locationY>
        <connector>
            <targetReference>Decision_in_Case_Owner</targetReference>
        </connector>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Onboarding_0</name>
        <label>Update Onboarding</label>
        <locationX>1630</locationX>
        <locationY>217</locationY>
        <connector>
            <targetReference>Is_Team_Populated</targetReference>
        </connector>
        <inputReference>Onboarding_Process</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Previous_Owner</name>
        <label>Update Previous Owner</label>
        <locationX>3127</locationX>
        <locationY>1404</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Current_Number_of_Open_Cases__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>NuberOfOpenCasesCurrentOwner</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Current_Number_of_Open_Cases__c</field>
            <value>
                <elementReference>NuberOfOpenCasesCurrentOwner</elementReference>
            </value>
        </inputAssignments>
        <object>User</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Proof_Of_Payment_Received</name>
        <label>Update Proof Of Payment Received</label>
        <locationX>2148</locationX>
        <locationY>624</locationY>
        <connector>
            <targetReference>Send_Email_to_Mathilde</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Proof_of_Payment_Received_Date__c</field>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateCustomerPortalCaseOwner</name>
        <label>UpdateCustomerPortalCaseOwner</label>
        <locationX>580</locationX>
        <locationY>671</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>CaseOwner</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>715</locationX>
        <locationY>195</locationY>
        <connector>
            <targetReference>decision_on_user_bypass_flow</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <name>BuybackCasePaid_EmailBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Bonjour,

Comme annoncé il y a quelques jours, un ou plusieurs de vos paiements effectués par  prélèvement SEPA ont été refusés ces dernières semaines, pour un montant de {!$Record.Bill_Amount__c}. 

Le montant TTC des paiements et la pénalité 7,5€ par commande vous ont été refacturés.

Votre Porte Monnaie Virtuel était suffisamment créditeur, donc ces montants ont pu être compensés, conformément à l’article “Paiement par compensation” de nos CGV, ainsi qu’il ressort de la dernière facture. Votre compte Buyback a donc été réactivé. 

Cordialement,

-------

Hello,

As announced a few days ago, one or more of your payments made by SEPA direct debit have been refused in recent weeks, for an amount of {!$Record.Bill_Amount__c}. 

You have been charged the amount of the payments and the penalty of 7.5€ per order.

Your Virtual Wallet was sufficiently credited, so these amounts could be offset, in accordance with the article &quot;Compensation Payment&quot; of our T&amp;Cs, as shown on the last invoice. Your Buyback account has therefore been reactivated. 

Kind regards,</text>
    </textTemplates>
    <textTemplates>
        <name>BuybackCasePais_EmailSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Refacturation Chargebacks - Reprise Back Market</text>
    </textTemplates>
    <textTemplates>
        <name>NewCase_Buyback_EmailBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Bonjour,

Dans le cadre d&apos;une reprise sur notre plateforme, nous sommes informés qu&apos;au moins un de vos prélèvements a été refusé par votre banque.

Nous vous invitons à prendre contact avec votre banque pour connaître l&apos;origine de ce refus et à nous en justifier sans délai.

Afin d’éviter tout nouveau défaut de paiement, nous suspendons provisoirement votre compte Buyback dans l’attente du paiement de la régularisation de votre compte.

En conséquence de ces refus de prélèvement, Back Market a pris en charge le paiement du prix de vos commandes concernées plus une pénalité de 7,5€ par commande. Ces montants apparaîtront sur votre facture vendeur du mois prochain. 

Si votre Porte Monnaie Virtuel est suffisamment créditeur, ces montants seront compensés, conformément à l’article “Paiement par compensation” de nos CGV. Sinon, votre dette apparaîtra sur votre facture vendeur jusqu’à son parfait paiement.

Cordialement,

----------

Hello,

We have been informed that at least one of your direct debits has been refused by your bank.

We invite you to contact your bank to find out the reason for this refusal and to justify it to us without delay.

In order to avoid any further default, we will temporarily suspend your Buyback account pending payment of the settlement of your account.

As a result of these refusals, Back Market has assumed the payment of the price of your orders concerned plus a penalty of €7.5 per order. These amounts will appear on your next month&apos;s sales invoice. 

If your Virtual Wallet is sufficiently credited, these amounts will be offset, in accordance with the article &quot;Compensation Payment&quot; of our T&amp;Cs. Otherwise, your debt will appear on your seller&apos;s invoice until it is paid in full.

Kind regards,</text>
    </textTemplates>
    <textTemplates>
        <name>NewCase_Buyback_EmailSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>/!\ Prélèvement SEPA refusé (SEPA Direct Debit refused) - Buyback Back Market</text>
    </textTemplates>
    <variables>
        <name>CurrentCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>NuberOfOpenCasesCurrentOwner</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>NumberOfOpenCasesPreviousOwner</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>Onboarding_Process</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Onboarding_Process__c</objectType>
    </variables>
    <variables>
        <name>Var_ListEmail</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
