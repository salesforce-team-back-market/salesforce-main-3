<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>50.0</apiVersion>
    <assignments>
        <name>Assign_number_of_open_cases_to_user</name>
        <label>Assign number of open cases to user</label>
        <locationX>2056</locationX>
        <locationY>394</locationY>
        <assignmentItems>
            <assignToReference>NumberofCasesOpen</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Open_cases_for_Owner</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_current_user</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Decision_Case_status</name>
        <label>Decision - Case status</label>
        <locationX>576</locationX>
        <locationY>619</locationY>
        <defaultConnector>
            <targetReference>Update_Case_assign_status_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_is_new_without_Business_Name</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_contact</targetReference>
            </connector>
            <label>Case is new without Business Name</label>
        </rules>
        <rules>
            <name>Case_is_new_with_Business_Name</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_related_case_new</targetReference>
            </connector>
            <label>Case is new with Business Name</label>
        </rules>
        <rules>
            <name>Case_is_reopened_with_inactive_owner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_assign_status</targetReference>
            </connector>
            <label>Case is reopened with inactive owner</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_contact_found</name>
        <label>Decision - contact found</label>
        <locationX>581</locationX>
        <locationY>328</locationY>
        <defaultConnector>
            <targetReference>Update_Start_Round_Robin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Contact_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_contact</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_assign_ingo</targetReference>
            </connector>
            <label>Contact found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_Email_is_Junk_Spam</name>
        <label>Decision - Email is Junk/Spam</label>
        <locationX>575</locationX>
        <locationY>816</locationY>
        <defaultConnector>
            <targetReference>Decision_Case_status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Email_is_Junk_spam</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>test_hi@backmarket.fr</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>hi@backmarket.fr</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>catalog-mgmt@backmarkethelp.zendesk.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>support@backmarkethelp.zendesk.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>support@backmarket-support.zendesk.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>business@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>mailer-daemon</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>no-reply@backmarket.fr</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>noreply@aircall.io</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>no-reply@yet-another-mail-merge.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>business@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>noreply@backmarket.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>notifications@calendly.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>help@cubyn.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FromAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>diana@textexpander.com</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Junk_Spam_queue</targetReference>
            </connector>
            <label>Email is Junk/spam</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_Email_to_case_Define_owner</name>
        <label>Decision - Email-to-case - Define owner</label>
        <locationX>1086</locationX>
        <locationY>358</locationY>
        <defaultConnector>
            <targetReference>Update_Case_owner_Merchant_Owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Email_to_case_For_BackWatch_EU</name>
            <conditionLogic>1 AND 2 AND (3 OR ((4 OR 5) AND 6))</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_new.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Account.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.UserID__c.PA__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU email-to-case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_BackWatch_EU</targetReference>
            </connector>
            <label>Email-to-case - For BackWatch EU</label>
        </rules>
        <rules>
            <name>Email_to_case_For_BackWatch_US</name>
            <conditionLogic>1 AND 2 AND (3 OR ((4 OR 5) AND 6))</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_new.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Account.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.UserID__c.Sam__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>US email-to-case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_BackWatch_US</targetReference>
            </connector>
            <label>Email-to-case - For BackWatch US</label>
        </rules>
        <rules>
            <name>Email_to_case_For_Selfcare_EU</name>
            <conditionLogic>1 AND 2 AND (3 OR ((4 OR 5) AND 6))</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_new.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Account.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.UserID__c.Antoine_T__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Selfcare EU</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_Selfcare_EU</targetReference>
            </connector>
            <label>Email-to-case - For Selfcare EU</label>
        </rules>
        <rules>
            <name>Email_to_case_For_MAS_EU</name>
            <conditionLogic>1 AND 2 AND (3 OR 4) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_new.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Start_Round_Robin__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_new.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU - Merchant Activation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_Merchant_Activation_EU</targetReference>
            </connector>
            <label>Email-to-case - For MAS EU</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_on_Case_Origin</name>
        <label>Decision on Case Origin</label>
        <locationX>1085</locationX>
        <locationY>553</locationY>
        <defaultConnector>
            <targetReference>Update_Case_owner_Merchant_Owner_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_BackWatch_EU_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU email-to-case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_BackWatch_EU</targetReference>
            </connector>
            <label>Is BackWatch EU contact</label>
        </rules>
        <rules>
            <name>Is_BackWatch_US_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>US email-to-case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_BackWatch_US</targetReference>
            </connector>
            <label>Is BackWatch US contact</label>
        </rules>
        <rules>
            <name>Is_Merchant_Activation_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>EU - Merchant Activation</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_Merchant_Activation_EU</targetReference>
            </connector>
            <label>Is Merchant Activation contact</label>
        </rules>
        <rules>
            <name>Is_Selfcare_EU_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Selfcare EU</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_related_case_reopen.Account.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_from_Selfcare_EU</targetReference>
            </connector>
            <label>Is Selfcare EU contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_on_user_bypass_flow</name>
        <label>Decision on user bypass flow</label>
        <locationX>168</locationX>
        <locationY>813</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>user_don_t_bypass_flow</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$User.ByPassFlow__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>What_is_email_related_to</targetReference>
            </connector>
            <label>user don&apos;t bypass flow</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_is_email_related_to</name>
        <label>What is email related to?</label>
        <locationX>319</locationX>
        <locationY>817</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_related_case</targetReference>
            </connector>
            <label>Case</label>
        </rules>
        <rules>
            <name>Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>0033</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contact_and_Account</targetReference>
            </connector>
            <label>Contact</label>
        </rules>
        <rules>
            <name>Merchant</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RelatedToId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>0013</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Merchant</targetReference>
            </connector>
            <label>Merchant</label>
        </rules>
    </decisions>
    <description>Team Flow Fixed</description>
    <environments>Default</environments>
    <formulas>
        <name>Today</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Email Message - After Save Flow (Creation) {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Email Message - After Save Flow (Creation)</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_contact</name>
        <label>Get contact</label>
        <locationX>590</locationX>
        <locationY>448</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_contact_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.SuppliedEmail</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Contact_and_Account</name>
        <label>Get Contact and Account</label>
        <locationX>176</locationX>
        <locationY>1071</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Merchant_0</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Junk_Spam_queue</name>
        <label>Get Junk/Spam queue</label>
        <locationX>719</locationX>
        <locationY>973</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Owner_to_Junk_Spam_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Junk_Spam_queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Open_cases_for_Owner</name>
        <label>Get Open cases for Owner</label>
        <locationX>1926</locationX>
        <locationY>394</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_number_of_open_cases_to_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.CaseRecordType__c.BackWatch_Merchant_contact__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case_last.OwnerId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_related_case</name>
        <label>Get related case</label>
        <locationX>451</locationX>
        <locationY>814</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Email_is_Junk_Spam</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_related_case_last</name>
        <label>Get related case last</label>
        <locationX>1768</locationX>
        <locationY>401</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Open_cases_for_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_related_case_new</name>
        <label>Get related case new</label>
        <locationX>904</locationX>
        <locationY>318</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Email_to_case_Define_owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_related_case_reopen</name>
        <label>Get related case (reopen)</label>
        <locationX>900</locationX>
        <locationY>550</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_on_Case_Origin</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_BackWatch_EU</name>
        <label>Get user from BackWatch EU</label>
        <locationX>1348</locationX>
        <locationY>732</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_owner_BackWatch_EU</targetReference>
        </connector>
        <filterLogic>((1 AND 3) OR 4) AND 2</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSM Back Watch E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.PA__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.Antoine_T__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_BackWatch_US</name>
        <label>Get user from BackWatch US</label>
        <locationX>1344</locationX>
        <locationY>197</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_owner_BackWatch_US</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSM Back Watch U.S.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_Merchant_Activation_EU</name>
        <label>Get user from Merchant Activation EU</label>
        <locationX>1353</locationX>
        <locationY>561</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_owner_MAS_EU</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Activation E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Setup.UserID__c.Felix__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_from_Selfcare_EU</name>
        <label>Get user from Selfcare EU</label>
        <locationX>1344</locationX>
        <locationY>363</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_owner_Selfcare_EU</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Team__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSM Selfcare E.U.</stringValue>
            </value>
        </filters>
        <filters>
            <field>User_OOO__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Current_Number_of_Open_Cases__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_assign_ingo</name>
        <label>Update Case - assign ingo</label>
        <locationX>734</locationX>
        <locationY>390</locationY>
        <connector>
            <targetReference>Get_related_case_new</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>Get_related_case.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>Get_contact.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Merchant_BizDev__c</field>
            <value>
                <elementReference>Get_related_case.Account.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Start_Round_Robin__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_assign_status</name>
        <label>Update Case - assign status</label>
        <locationX>743</locationX>
        <locationY>550</locationY>
        <connector>
            <targetReference>Get_related_case_reopen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_assign_status_0</name>
        <label>Update Case - assign status</label>
        <locationX>738</locationX>
        <locationY>709</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_owner_BackWatch_EU</name>
        <label>Update Case owner - BackWatch EU</label>
        <locationX>1544</locationX>
        <locationY>732</locationY>
        <connector>
            <targetReference>Get_related_case_last</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_user_from_BackWatch_EU.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_owner_BackWatch_US</name>
        <label>Update Case owner - BackWatch US</label>
        <locationX>1559</locationX>
        <locationY>197</locationY>
        <connector>
            <targetReference>Get_related_case_last</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_user_from_BackWatch_US.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_owner_MAS_EU</name>
        <label>Update Case owner - MAS EU</label>
        <locationX>1552</locationX>
        <locationY>561</locationY>
        <connector>
            <targetReference>Get_related_case_last</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_user_from_Merchant_Activation_EU.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_owner_Merchant_Owner</name>
        <label>Update Case owner - Merchant Owner</label>
        <locationX>1091</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_related_case_last</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_related_case_new.Account.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_owner_Merchant_Owner_0</name>
        <label>Update Case owner - Merchant Owner</label>
        <locationX>1098</locationX>
        <locationY>850</locationY>
        <connector>
            <targetReference>Get_related_case_last</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_related_case_reopen.Account.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_owner_Selfcare_EU</name>
        <label>Update Case owner - Selfcare EU</label>
        <locationX>1555</locationX>
        <locationY>363</locationY>
        <connector>
            <targetReference>Get_related_case_last</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_user_from_Selfcare_EU.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_current_user</name>
        <label>Update current user</label>
        <locationX>2222</locationX>
        <locationY>394</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case_last.OwnerId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Current_Number_of_Open_Cases__c</field>
            <value>
                <elementReference>NumberofCasesOpen</elementReference>
            </value>
        </inputAssignments>
        <object>User</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Merchant</name>
        <label>Update Merchant</label>
        <locationX>328</locationX>
        <locationY>1021</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Last_Breath_Date__c</field>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_Breath_Type__c</field>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Merchant_0</name>
        <label>Update Merchant</label>
        <locationX>40</locationX>
        <locationY>1071</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Contact_and_Account.Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Last_Breath_Date__c</field>
            <value>
                <elementReference>Today</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_Breath_Type__c</field>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Owner_to_Junk_Spam_Queue</name>
        <label>Update Owner to Junk/Spam Queue</label>
        <locationX>874</locationX>
        <locationY>975</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Junk_Spam_queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Start_Round_Robin</name>
        <label>Update Start Round Robin</label>
        <locationX>740</locationX>
        <locationY>189</locationY>
        <connector>
            <targetReference>Get_related_case_new</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_related_case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Start_Round_Robin__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>482</locationY>
        <connector>
            <targetReference>Decision_on_user_bypass_flow</targetReference>
        </connector>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>CaseOwner</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>NumberofCasesOpen</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
